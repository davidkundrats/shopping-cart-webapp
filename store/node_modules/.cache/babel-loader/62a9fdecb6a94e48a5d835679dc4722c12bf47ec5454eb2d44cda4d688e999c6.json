{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Desktop\\\\storefront\\\\store\\\\src\\\\components\\\\PayPalButton.js\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaypalButton = _ref => {\n  let {\n    total,\n    cart\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(PayPalButton, {\n    createOrder: (data, actions) => {\n      return fetch('/api/paypal/create-transaction', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          total: total,\n          cart: cart\n        })\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        return data.orderID;\n      }).catch(error => console.log(error));\n    },\n    onApprove: data => {\n      // Capture the funds from the transaction\n      return fetch('/api/paypal/capture-transaction', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          orderID: data.orderID\n        })\n      }).then(res => {\n        return res.json();\n      }).then(details => {\n        if (details === 200) {\n          console.log('success');\n        } else {\n          console.log('failure');\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    options: {\n      clientId: process.env.PAYPAL_CLIENT_ID\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = PaypalButton;\nexport default PaypalButton;\nvar _c;\n$RefreshReg$(_c, \"PaypalButton\");","map":{"version":3,"names":["PayPalButton","jsxDEV","_jsxDEV","PaypalButton","_ref","total","cart","createOrder","data","actions","fetch","method","headers","body","JSON","stringify","then","response","json","orderID","catch","error","console","log","onApprove","res","details","options","clientId","process","env","PAYPAL_CLIENT_ID","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/david/Desktop/storefront/store/src/components/PayPalButton.js"],"sourcesContent":["import { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\nconst PaypalButton = ({ total, cart }) => {\r\n    return (\r\n        <PayPalButton\r\n            createOrder={(data, actions) => {\r\n                return fetch('/api/paypal/create-transaction', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        total: total,\r\n                        cart: cart,\r\n                    })\r\n                })\r\n                    .then((response) => { return response.json() })\r\n                    .then((data) => { return data.orderID })\r\n                    .catch(error => console.log(error))\r\n            }}\r\n            onApprove={(data) => {\r\n                // Capture the funds from the transaction\r\n                return fetch('/api/paypal/capture-transaction', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'content-type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ orderID: data.orderID })\r\n                })\r\n                    .then((res) => { return res.json() })\r\n                    .then((details) => {\r\n                        if (details === 200) {\r\n                            console.log('success');\r\n                        } else {\r\n                            console.log('failure');\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                    })\r\n            }}\r\n            options={{\r\n                clientId: process.env.PAYPAL_CLIENT_ID\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PaypalButton;"],"mappings":";AAAA,SAASA,YAAY,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,YAAY,GAAGC,IAAA,IAAqB;EAAA,IAApB;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACjC,oBACIF,OAAA,CAACF,YAAY;IACTO,WAAW,EAAEA,CAACC,IAAI,EAAEC,OAAO,KAAK;MAC5B,OAAOC,KAAK,CAAC,gCAAgC,EAAE;QAC3CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBV,KAAK,EAAEA,KAAK;UACZC,IAAI,EAAEA;QACV,CAAC;MACL,CAAC,CAAC,CACGU,IAAI,CAAEC,QAAQ,IAAK;QAAE,OAAOA,QAAQ,CAACC,IAAI,EAAE;MAAC,CAAC,CAAC,CAC9CF,IAAI,CAAER,IAAI,IAAK;QAAE,OAAOA,IAAI,CAACW,OAAO;MAAC,CAAC,CAAC,CACvCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IAC3C,CAAE;IACFG,SAAS,EAAGhB,IAAI,IAAK;MACjB;MACA,OAAOE,KAAK,CAAC,iCAAiC,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEI,OAAO,EAAEX,IAAI,CAACW;QAAQ,CAAC;MAClD,CAAC,CAAC,CACGH,IAAI,CAAES,GAAG,IAAK;QAAE,OAAOA,GAAG,CAACP,IAAI,EAAE;MAAC,CAAC,CAAC,CACpCF,IAAI,CAAEU,OAAO,IAAK;QACf,IAAIA,OAAO,KAAK,GAAG,EAAE;UACjBJ,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QAC1B,CAAC,MAAM;UACHD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QAC1B;MACJ,CAAC,CAAC,CACDH,KAAK,CAACC,KAAK,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAC,CAAC;IACV,CAAE;IACFM,OAAO,EAAE;MACLC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC;IAC1B;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;AAAAC,EAAA,GA7CKjC,YAAY;AA+ClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}