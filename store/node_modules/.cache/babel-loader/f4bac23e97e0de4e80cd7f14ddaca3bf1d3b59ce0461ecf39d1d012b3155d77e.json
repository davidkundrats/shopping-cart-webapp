{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Desktop\\\\storefront\\\\store\\\\src\\\\pages\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { ShopContext } from \"../context/shop-context\";\nimport CartItem from \"../components/CartItem\";\nimport allProducts from \"../data/fulldata\";\nimport \"../cart.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cart() {\n  _s();\n  const {\n    cartItems,\n    getTotalCartAmount\n  } = useContext(ShopContext);\n  const totalAmount = getTotalCartAmount();\n  const navigate = useNavigate();\n\n  // creates a paypal order\n  const createOrder = (data, actions) => {\n    return actions.order.create({\n      purchase_units: [{\n        description: [],\n        amount: {\n          value: totalAmount\n        }\n      }]\n      // remove the applicaiton_context object if you need your users to add a shipping address\n    }).then(orderID => {\n      setOrderID(orderID);\n      return orderID;\n    });\n  };\n  // handles when a payment is confirmed for paypal\n  const onApprove = (data, actions) => {\n    return actions.order.capture().then(function (details) {\n      const {\n        payer\n      } = details;\n      setBillingDetails(payer);\n      setSucceeded(true);\n    });\n  }; // handles payment errors\n  const onError = (data, actions) => {\n    setPaypalErrorMessage(\"Something went wrong with your payment\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Cart:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allProducts.map(product => {\n        if (cartItems[product.id] !== 0) {\n          return /*#__PURE__*/_jsxDEV(CartItem, {\n            data: product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 20\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkout\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Subtotal: $\", totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        children: \"Continue Shopping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Cart, \"BUO6xlc3GMDLd7FImTpT0zTkIAM=\", false, function () {\n  return [useNavigate];\n});\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useContext","useState","ShopContext","CartItem","allProducts","useNavigate","jsxDEV","_jsxDEV","Cart","_s","cartItems","getTotalCartAmount","totalAmount","navigate","createOrder","data","actions","order","create","purchase_units","description","amount","value","then","orderID","setOrderID","onApprove","capture","details","payer","setBillingDetails","setSucceeded","onError","setPaypalErrorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/david/Desktop/storefront/store/src/pages/Cart.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { ShopContext } from \"../context/shop-context\";\r\nimport CartItem from \"../components/CartItem\";\r\nimport allProducts from \"../data/fulldata\";\r\nimport \"../cart.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport default function Cart() {\r\n  const { cartItems, getTotalCartAmount } = useContext(ShopContext);\r\n  const totalAmount = getTotalCartAmount();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  // creates a paypal order\r\n  const createOrder = (data, actions) => {\r\n    return actions.order\r\n      .create({\r\n        purchase_units: [\r\n          {\r\n            description: [],\r\n            amount: {\r\n              value: totalAmount,\r\n            },\r\n          },\r\n        ],\r\n        // remove the applicaiton_context object if you need your users to add a shipping address\r\n      })\r\n      .then((orderID) => {\r\n        setOrderID(orderID);\r\n        return orderID;\r\n      });\r\n  };\r\n  // handles when a payment is confirmed for paypal\r\n  const onApprove = (data, actions) => {\r\n    return actions.order.capture().then(function (details) {\r\n      const { payer } = details;\r\n      setBillingDetails(payer);\r\n      setSucceeded(true);\r\n    });\r\n  }; // handles payment errors\r\n  const onError = (data, actions) => {\r\n    setPaypalErrorMessage(\"Something went wrong with your payment\");\r\n  };\r\n\r\n  return (\r\n    <aside className=\"cart\">\r\n      <div>\r\n        <h1>Your Cart:</h1>\r\n      </div>\r\n      <div>\r\n        {allProducts.map((product) => {\r\n          if (cartItems[product.id] !== 0) {\r\n            return <CartItem data={product} />;\r\n          }\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"checkout\">\r\n        <p>Subtotal: ${totalAmount}</p>\r\n        <button onClick={() => navigate(\"/\")}>Continue Shopping</button>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}